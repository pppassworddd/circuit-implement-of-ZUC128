#This version is implemented by splitting S1 into three layers
for i in range(256):
    x = list(map(int, bin(i)[2:].rjust(8, '0')))  # x3存储在x[0]，即x3 x2 x1 x0存储在x[0-3]上
    # print(x)
    #x = x[::-1]  # 逆序
    # print(x)

    a = [0] * 104
    t = [0] * 104
    y = [0] * 22
    z = [0] * 18
    s = [0] * 8
    #B
    a[0] = x[3] ^ x[5]
    y[0] = a[0]
    a[9] = a[0] ^ x[6]
    y[11] = a[9]
    a[12] = x[1] ^ x[5]
    y[14] = a[12]
    a[23] = x[4] ^ x[7]
    a[4] = x[3] ^ a[23]
    y[4] = a[4]
    a[6] = a[4] ^ a[12]
    y[6] = a[6]
    a[7] = a[23] ^ x[6]
    y[8] = a[7]
    a[24] = x[2] ^ x[6]
    a[11] = a[24] ^ a[23]
    y[13] = a[11]
    a[15] = a[24] ^ a[0]
    y[17] = a[15]
    a[25] = x[1] ^ x[7]
    a[8] = a[25] ^ a[24]
    y[10] = a[8]
    a[19] = a[9] ^ a[8]
    y[21] = a[19]
    a[26] = x[2] ^ x[4]
    a[13] = x[1] ^ a[26]
    y[15] = a[13]
    a[17] = a[13] ^ a[15]
    y[19] = a[17]
    a[20] = a[26] ^ a[0]
    a[2] = x[6] ^ a[20]
    y[2] = a[2]
    a[18] = a[20] ^ a[8]
    y[20] = a[18]
    a[27] = x[0] ^ x[5]
    a[16] = a[27] ^ a[26]
    y[18] = a[16]
    a[21] = x[1] ^ a[27]
    a[3] = a[21] ^ a[15]
    y[3] = a[3]
    a[22] = a[25] ^ a[27]
    a[10] = a[22] ^ a[15]
    y[12] = a[10]
    a[28] = x[0] ^ x[1]
    a[14] = a[28] ^ a[26]
    y[16] = a[14]
    a[1] = a[14] ^ a[15]
    y[1] = a[1]
    a[5] = a[14] ^ x[6]
    y[5] = a[5]
    y[7] = x[6]
    y[9] = x[2]
    # y[9]=x[7]^ x[6]^ x[4]

    y = y[::-1]  # 逆序

    #F非线性函数
    t[7] = y[13] & y[17]
    t[8] = y[8] & y[9]
    t[9] = y[12] & y[16]
    t[10] = y[6] & y[7]
    t[11] = y[2] & y[3]
    t[12] = y[4] & y[5]
    t[13] = y[11] & y[15]
    t[14] = y[1] & y[0]
    t[15] = y[10] & y[14]
    t[16] = t[7] ^ t[9]
    t[17] = t[7] ^ t[8]
    t[18] = t[11] ^ t[12]
    t[19] = t[10] ^ t[12]
    t[20] = t[13] ^ t[15]
    t[21] = t[13] ^ t[14]
    t[22] = t[16] ^ t[18]
    t[23] = t[17] ^ t[19]
    t[24] = t[18] ^ t[20]
    t[25] = t[19] ^ t[21]
    t[26] = t[22] ^ y[18]
    t[27] = t[23] ^ y[20]
    t[28] = t[24] ^ y[21]
    t[29] = t[25] ^ y[19]

    #print(t[26], t[27], t[28], t[29])

    # 求逆器
    t[30] = t[27] & t[29]
    t[31] = t[26] ^ t[27]
    t[32] = t[28] ^ t[30]
    t[33] = t[31] & t[32]
    t[34] = t[26] ^ t[33]
    t[35] = t[28] ^ t[29]
    t[36] = t[26] ^ t[30]
    t[37] = t[35] & t[36]
    t[38] = t[28] ^ t[37]
    t[39] = t[26] & t[28]
    t[40] = t[30] ^ t[39]
    t[41] = t[31] & t[40]
    t[42] = t[27] ^ t[30]
    t[43] = t[41] ^ t[42]
    t[44] = t[35] & t[40]
    t[45] = t[29] ^ t[30]
    t[46] = t[44] ^ t[45]

    s[1] = t[34]
    s[2] = t[46]
    s[0] = t[43]
    s[3] = t[38]

    t[47] = y[12] ^ y[13]
    t[48] = y[11] ^ y[13]
    t[49] = y[10] ^ y[12]
    t[50] = t[48]^ t[49]
    t[51] = y[10] ^ y[11]
    t[52] = s[2] ^ s[3]
    t[53] = s[2] ^ s[0]
    t[54] = s[1] ^ s[3]
    t[55] = t[53] ^ t[54]
    t[56] = s[1] ^ s[0]
    t[57] = y[16] ^ y[17]
    t[58] = y[15] ^ y[17]
    t[59] = y[14] ^ y[16]
    t[60] = t[58] ^ t[59]
    t[61] = y[14] ^ y[15]
    
    z[0] = y[14] & s[1]
    z[1] = t[56] & t[61]
    z[2] = y[15] & s[0]
    z[3] = t[54] & t[59]
    z[4] = t[55] & t[60]
    z[5] = t[53] & t[58]
    z[6] = y[16] & s[3]
    z[7] = t[52] & t[57]
    z[8] = y[17] & s[2]
    z[9] = y[10] & s[1]
    z[10] = t[51] & t[56]
    z[11] = y[11] & s[0]
    z[12] = t[49] & t[54]
    z[13] = t[50] & t[55]
    z[14] = t[48] & t[53]
    z[15] = y[12] & s[2]
    z[16] = t[47] & t[52]
    z[17] = y[13] & s[2]


    z = z[::-1]  # 逆序
    #U矩阵
    a[19] = z[13] ^ z[14]
    a[20] = z[9] ^ z[11]
    a[11] = a[19] ^ a[20]
    a[21] = z[15] ^ z[17]
    a[18] = a[19] ^ a[21]
    a[22] = z[6] ^ z[7]
    a[23] = z[3] ^ z[5]
    a[17] = a[22] ^ a[23]
    a[12] = a[18] ^ a[17]
    a[24] = z[0] ^ z[1]
    a[13] = a[22] ^ a[24]
    a[3] = a[13] ^ a[11]
    s[3] = a[3]^1
    a[25] = z[7] ^ z[8]
    a[26] = z[1] ^ z[2]
    a[10] = a[25] ^ a[26]
    a[27] = z[3] ^ z[4]
    a[14] = a[25] ^ a[27]
    a[5] = a[14] ^ a[13]
    a[5] = a[5]^1
    s[5] = a[5]

    a[1] = a[11] ^ a[5]
    s[1] = a[1]

    a[2] = a[12] ^ a[5]
    s[2] = a[2]^1
    a[28] = z[12] ^ z[17]
    a[29] = z[13] ^ z[16]
    a[16] = a[28] ^ a[29]
    a[4] = a[16] ^ a[11]
    s[4] = a[4]
    a[9] = a[17] ^ a[16]
    a[6] = a[10] ^ a[9]
    s[6] = a[6]
    a[30] = z[9] ^ z[10]
    a[31] = z[15] ^ z[16]
    a[15] = a[30] ^ a[31]
    a[8] = a[15] ^ a[10]
    a[0] = a[8] ^ a[3]
    s[0] = a[0]
    a[7] = a[9] ^ a[8]
    s[7] = a[7]^1

    s = s[::-1]  # 逆序

    result = str(s[7]) + str(s[6]) + str(s[5]) + str(s[4]) + str(s[3]) + str(s[2]) + str(s[1]) + str(s[0])
    output = "".join(list(map(str, result)))
    print(hex(int(output, 2))[2:].rjust(2, '0'), end=" ")
    if i % 16 == 15:
        print()
